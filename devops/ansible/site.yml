- name: Setting up Girder
  hosts: localhost
  vars:
    required_ansible_version: 2.1.0
  tasks:
    - fail: msg="Playbook requires ansible >= {{required_ansible_version}}"
      when: ansible_version.string|version_compare(required_ansible_version, '<')

    - name: Set some facts
      set_fact:
        girder_host: "{{girder_host|default('localhost')}}"
        girder_port: "{{girder_port|default(8080)}}"
        girder_scheme: "http"

    - name: Create Girder EDP admin user
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        user:
          firstName: "edp"
          lastName: "edp"
          login: "edpadmin"
          password: "{{ edpadmin_password }}"
          email: "edp@kitware.com"
          admin: yes
        state: present

    - name: Enable EDP plugins
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        username: "edpadmin"
        password: "{{ edpadmin_password }}"
        plugins:
          - edp
        state: present

    - name: Enable OAuth plugin
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        username: "edpadmin"
        password: "{{ edpadmin_password }}"
        plugins:
          - oauth
        state: present

    - name: Create filesystem assetstore
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        username: "edpadmin"
        password: "{{ edpadmin_password }}"
        assetstore:
          name: "Filesystem Assetstore"
          type: "filesystem"
          root: "/assetstore"
          current: true
        state: present
      when: s3_bucket is not defined

    - name: Create S3 assetstore
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        username: "edpadmin"
        password: "{{ edpadmin_password }}"
        assetstore:
          name: "S3 Assetstore"
          type: "s3"
          bucket: "{{ s3_bucket }}"
          service: ""
          region: "{{ s3_region }}"
          prefix: "assetstore"
          inferCredentials: true
          current: true
        state: present
      when: s3_bucket is defined

    - name: Restart the server
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        username: "edpadmin"
        password: "{{ edpadmin_password }}"
        put:
          path: "system/restart"

    - name: Wait until server restarts
      wait_for:
        host="{{girder_host}}"
        port="{{girder_port}}"
        delay=5

    - name: Configure OAuth plugins
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        username: "edpadmin"
        password: "{{ edpadmin_password }}"
        setting:
          key: "{{item.key}}"
          value: "{{item.value}}"
        state: present
      with_items:
        - {
          "key": "oauth.google_client_id",
          "value": "{{ oauth_google_client_id }}"
        }
        - {
          "key": "oauth.google_client_secret",
          "value": "{{ oauth_google_client_secret }}"
        }
        - {
          "key": "oauth.providers_enabled",
          "value": ["google"]
        }

    - name: Restart the server
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        username: "edpadmin"
        password: "{{ edpadmin_password }}"
        put:
          path: "system/restart"
